"use strict";

const user = require("./user");
const microblog = require("./microblog");

const functions = require("firebase-functions");
const admin = require("firebase-admin");
admin.initializeApp(functions.config().firebase);

exports.addUser = functions.https.onRequest((data, context) => {
  user.addUser(data, context, admin)
});

exports.updateUser = functions.https.onRequest((data, context) => {
  user.updateUser(data, context, admin);
});

exports.deleteUser = functions.https.onRequest((data, context) => {
  user.deleteUser(data, context, admin);
});


exports.testGet = functions.https.onRequest((req, res) => {
  var contents = [];
  var db = admin.firestore();
  db.collection("test")
    .get()
    .then(snapshot => {
      snapshot.forEach(doc => {
        var v = {
          id: doc.id,
          message: doc.data().message
        };
        contents = contents.concat(v);
      });
      res.send(contents);
      return "";
    })
    .catch(reason => {
      res.send(reason);
    });
});

exports.testPost = functions.https.onRequest((req, res) => {
  var db = admin.firestore();
  db.collection("test")
    .add(req.body)
    .then(snapshot => {
      res.send("Added new document");
      return "";
    })
    .catch(error => {
      res.send(error);
    });
});

exports.getUserMicroblogs = functions.https.onRequest((req, res) => {
    microblog.getUserMicroblogs(req, res, admin);
});

<<<<<<< HEAD
// retrieve microblogs to populate a TIMELINE VIEW
exports.getAllMicroblogs = functions.https.onRequest((req, res) => {
    var db = admin.firestore();
    var ref = db.ref('microblogs');
    var contents = [];
    
    db.collection('users').get(userId).then(doc => {

        // query to get all microblogs of user whose topics exist in topics_following
        // OR
        // query microblogs collection where user exists in users_following and topic exists in topics_following

        var following = doc.data().following;
        for (let i = 0; i < following.length; i++) {
            let id = following[i];
            contents.add(id);
            // contents.add(get_user_microblogs(id));
        }
        res.send(contents);
        return "";

    }).catch(error => {
        res.send(error)
    })
});

// As a logged-in user, I should have the option to create a new microblog
// directly from my timeline so that I can easily post to my timeline.

=======
>>>>>>> fe00db4eb16fb11e935eb9ea922ba0e4a771f7e7
exports.postMicroblog = functions.https.onRequest((req, res) => {
    microblog.postMicroblog(req, res, admin);
});